% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_env.R
\name{replace_env}
\alias{replace_env}
\title{Replace one of the parent environments with another}
\usage{
replace_env(envir, search, replace, update_parent = TRUE)
}
\arguments{
\item{envir}{An \code{\link[base:environment]{environment}}.}

\item{search}{A \code{\link[base:environment]{environment}} to be
replaced.
It is also possible to specify a list of search environments.}

\item{replace}{A \code{\link[base:environment]{environment}}.}

\item{update_parent}{If TRUE, or 1L, the parent environment of
\code{replace} is set to the parent environment of the replaced
"search" environment. If FALSE, or 0L, it is not updated.
If a positive integer greater than one, then that parent
generation is updated, e.g. \code{update_parent = 2L} will update
the parent environment of the \emph{parent} of \code{replace}.}
}
\value{
Invisibly, a named list parent environments until the one
that was replaced.
}
\description{
Replace one of the parent environments with another
}
\examples{
a <- 42
f <- local(function() a)

f_envs <- parent_envs(environment(f), until = environment(), extra = 1L)
names(f_envs)
y <- f()
y

new <- as.environment(list(a = 13, pi = 3.14))
old_parents <- replace_env(environment(f), search = environment(), replace = new)
names(old_parents)

f_envs <- parent_envs(environment(f), until = list(environment(), parent.env(environment())))
names(f_envs)

## Note that f() will now see a = 13 in the replaced environment
## rather than a = 42 in the calling environment
z <- f()
z

}
