% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parent_env.R
\name{parent_env}
\alias{parent_env}
\title{Get ancestral environments of an environment}
\usage{
parent_env(envir = parent.frame(), n = 1L)
}
\arguments{
\item{envir}{An \code{\link[base:environment]{environment}}
or an object with an environment, e.g. a function or a formula.}

\item{n}{The generation of parent environment to get.
If \code{n = 0}, then \code{envir} is returned.
If \code{n = 1}, then \code{parent.env(envir)} is returned.
If \code{n = 2}, then \code{parent.env(parent.env(envir))} is returned,
and so on.}
}
\value{
An \code{\link[base:environment]{environment}}.  If no more parent
environments are found, the empty environment is returned.
}
\description{
Get ancestral environments of an environment
}
\examples{
parent_env()

ns <- getNamespace("stats")
parent_env(ns, n = 0)
parent_env(ns, n = 1)
parent_env(ns, n = 2)
parent_env(ns, n = 3)
parent_env(ns, n = Inf)  ## always emptyenv()

f <- local({
  a <- 42
  local({
    pi <- 3.14
    function() pi * a
  })
})
parent_env(f, n = 1)
parent_env(f, n = 2)
parent_env(f, n = 3)

}
\seealso{
\code{\link[=parent_envs]{parent_envs()}} and \code{\link[=top_env]{top_env()}}.
}
