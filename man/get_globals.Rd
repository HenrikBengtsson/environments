% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_globals.R
\name{get_globals}
\alias{get_globals}
\title{Get global variables on a function}
\usage{
get_globals(fcn)
}
\arguments{
\item{fcn}{The \code{\link[base:function]{function}}.}
}
\value{
A named list of globals.
}
\description{
Get global variables on a function
}
\examples{
## Here 'a' is a global variable
a <- 42
f <- function() pi * a
globals <- get_globals(f)
utils::ls.str(globals)

## Here 'a' is not a global variable, because it is part of
## the environment of 'f', which is a local environment
## that comes with function 'f'
f <- local({
  a <- 42
  function() pi * a
})
globals <- get_globals(f)
utils::ls.str(globals)


## Same here; 'a' is not a global variable
f <- local({
  a <- 42
  local({
    function() pi * a
  })
})
globals <- get_globals(f)
utils::ls.str(globals)

my_fcn <- function(prune = FALSE) {
  huge <- rnorm(1e6)
  
  n <- 2
  
  g <- local({
    pi <- 3.14
    function() n * pi
  })

  globals <- globals::globalsOf(g, envir = environment(g), mustExist = FALSE)
  str(globals)
  globals <- globals::cleanup(globals)
  str(globals)
  fcn_globals <- get_globals(g)
  str(fcn_globals)
}


my_fcn()
}
