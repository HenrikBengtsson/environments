% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prune_fcn.R
\name{prune_fcn}
\alias{prune_fcn}
\title{Replace one of the parent environments of a function with a fresh environment}
\usage{
prune_fcn(object, replace = globalenv(), populate = NULL)
}
\arguments{
\item{object}{A \code{\link[base:function]{function}} or a
\code{\link[base:tilde]{formula}}) that should be updated.}

\item{replace}{A \code{\link[base:environment]{environment}} to be
replaced environment with a pruned version.
It is also possible to specify a list of alternative environments.}

\item{populate}{An optional, named list of objects to be assigned to
the fresh environment replacing environment `replace`.}
}
\value{
A pruned version of `object`.
}
\description{
Replace one of the parent environments of a function with a fresh environment
}
\examples{
a <- 42
f <- local(function() a)

f_envs <- parent_envs(environment(f), until = environment(), extra = 1L)
names(f_envs)
f()

g <- prune_fcn(f, replace = environment(), populate = list(a = 13))
g_envs <- parent_envs(environment(g), until = list(environment(), parent.env(environment())))
names(g_envs)
g()

## However, we also changed f() here!
f()
f_envs <- parent_envs(environment(f), until = list(environment(), parent.env(environment())))
stopifnot(identical(f_envs, g_envs))

}
